package lesson06;

public class HomeWork {

    public static void main(String[] args) {

    /* ДЗ (обязательная часть).
       Создать класс CreditCard c полями номер счета, текущая сумма на счету.
       Добавьте метод, который позволяет начислять сумму на кредитную карточку.
       Добавьте метод, который позволяет снимать с карточки некоторую сумму.
       Добавьте метод, который выводит текущую информацию о карточке.
       Напишите программу, которая создает три объекта класса CreditCard, у которых заданы номер
       счета и начальная сумма.
       Тестовый сценарий для проверки:
       Положите деньги на первые две карточки и снимите с третьей.
    */
        // Создаем три объекта класса CreditCard, у которых заданы номер счета и начальная сумма.
        CreditCard card1 = new CreditCard(53230800, 100);
        CreditCard card2 = new CreditCard(43735000, 1425);
        CreditCard card3 = new CreditCard(91123841, 15000);

        card1.accrualOfAmountToCard(900);  // Начисляем сумму на первую карту
        card2.accrualOfAmountToCard(125);  // Начисляем сумму на вторую карту
        card3.withdrawalOfAmountFromCard(5000);  // Снимаем сумму с третьей карты

        // Выводим информацию о трех картах с учетом произведенных операций начисления и снятия
        card1.cardInformation();
        System.out.println();
        card2.cardInformation();
        System.out.println();
        card3.cardInformation();
        System.out.println();

    /* ДЗ (необязательная часть #1).
       Создать класс для описания компьютера, в этом классе должны быть поля: стоимость, модель(строковый тип), RAM и HDD. Для полей RAM и
       HDD следует создать свои собственные классы. Классы для RAM и HDD должны иметь конструктор по умолчанию и конструктор со всеми
       параметрами.
       Класс RAM имеет поля "название" и "объем".
       Класс HDD имеет поля "название", "объем" и "тип" (внешний или внутренний).
       Класс Computer должен иметь два конструктора:
        - первый - с параметрами стоимость и модель,
        - второй - со всеми полями.
       При создании объекта "компьютер" с помощью первого конструктора должны создаваться поля RAM и HDD с помощью конструкторов по
       умолчанию. В каждом из классов предусмотреть методы для вывода полной информации (вывод всех полей и всех значений).
       Тестовый сценарий для проверки:
       создать объект "компьютер 1" с помощью первого конструктора и вывести информацию на экран;
       создать объект "компьютер 2" с помощью второго конструктора и вывести информацию на экран.
    */
        // Создаем два объекта класса Computer с двумя разными конструкторами.
        Computer computer1 = new Computer(750, "Lenovo");
        Computer computer2 = new Computer(900, "HP", new RAM("Kingston", 16), new HDD("Samsung", 1000, "внутренний"));

        computer1.computerInfo(); // Выводим информацию о первом компьютере
        System.out.println();
        computer2.computerInfo(); // Выводим информацию о втором компьютере
        System.out.println();

    /* ДЗ (необязательная часть #2).
       Создать класс, описывающий банкомат.
       Набор купюр, находящихся в банкомате, должен задаваться тремя свойствами: количеством купюр номиналом 20, 50 и 100.
       Сделать метод для добавления денег в банкомат.
       Сделать функцию, снимающую деньги, которая принимает сумму денег, а возвращает булево значение -
       успешность выполнения операции.
       При снятии денег функция должна распечатывать каким количеством купюр какого номинала выдаётся сумма.
       Создать конструктор с тремя параметрами - количеством купюр каждого номинала.
    */
        // Создаем объект класса CashMachine с количеством купюр номиналом 20, 50 и 100.
        CashMachine cashMachine = new CashMachine(100, 50, 10);
        cashMachine.infoCashMachine(); // Выводим текущую информацию о банкомате
        System.out.println();
        // Создаем два объекта класса Money для добавления денег в банкомат и для снятия.
        Money money1 = new Money(10, 6, 5);
        Money money2 = new Money(5, 2, 3);

        cashMachine.addMoneyToCashMachine(money1); // Добавляем деньги в банкомат и выводим новую информацию
        System.out.println();
        cashMachine.withdrawalMoneyFromCashMachine(money2); // Снимаем деньги в банкомате и выводим новую информацию

    }
}
